import { KeycodeInterface } from './interfaces/keycode.interface';
export declare const keycode: {
    [x: number]: string;
    SELECT: import("./enums/select.enum").SelectEnum;
    MULTIPLY: import("./enums/operators.enum").OperatorsEnum;
    ADD: import("./enums/operators.enum").OperatorsEnum;
    SUBTRACT: import("./enums/operators.enum").OperatorsEnum;
    DECIMAL_POINT: import("./enums/operators.enum").OperatorsEnum;
    DIVIDE: import("./enums/operators.enum").OperatorsEnum;
    NUMPAD_0: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_1: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_2: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_3: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_4: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_5: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_6: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_7: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_8: import("./enums/numpad.enum").NumpadEnum;
    NUMPAD_9: import("./enums/numpad.enum").NumpadEnum;
    KEY_0: import("./enums/numbers.enum").NumbersEnum;
    KEY_1: import("./enums/numbers.enum").NumbersEnum;
    KEY_2: import("./enums/numbers.enum").NumbersEnum;
    KEY_3: import("./enums/numbers.enum").NumbersEnum;
    KEY_4: import("./enums/numbers.enum").NumbersEnum;
    KEY_5: import("./enums/numbers.enum").NumbersEnum;
    KEY_6: import("./enums/numbers.enum").NumbersEnum;
    KEY_7: import("./enums/numbers.enum").NumbersEnum;
    KEY_8: import("./enums/numbers.enum").NumbersEnum;
    KEY_9: import("./enums/numbers.enum").NumbersEnum;
    PAGEUP: import("./enums/functions.enum").FunctionsEnum;
    PAGEDOWN: import("./enums/functions.enum").FunctionsEnum;
    END: import("./enums/functions.enum").FunctionsEnum;
    HOME: import("./enums/functions.enum").FunctionsEnum;
    LEFT: import("./enums/functions.enum").FunctionsEnum;
    UP: import("./enums/functions.enum").FunctionsEnum;
    RIGHT: import("./enums/functions.enum").FunctionsEnum;
    DOWN: import("./enums/functions.enum").FunctionsEnum;
    INSERT: import("./enums/functions.enum").FunctionsEnum;
    DELETE: import("./enums/functions.enum").FunctionsEnum;
    F1: import("./enums/f.enum").FEnum;
    F2: import("./enums/f.enum").FEnum;
    F3: import("./enums/f.enum").FEnum;
    F4: import("./enums/f.enum").FEnum;
    F5: import("./enums/f.enum").FEnum;
    F6: import("./enums/f.enum").FEnum;
    F7: import("./enums/f.enum").FEnum;
    F8: import("./enums/f.enum").FEnum;
    F9: import("./enums/f.enum").FEnum;
    F10: import("./enums/f.enum").FEnum;
    F11: import("./enums/f.enum").FEnum;
    F12: import("./enums/f.enum").FEnum;
    BACKSPACE: import("./enums/commands.enum").CommandsEnum;
    TAB: import("./enums/commands.enum").CommandsEnum;
    ENTER: import("./enums/commands.enum").CommandsEnum;
    SHIFT: import("./enums/commands.enum").CommandsEnum;
    CTRL: import("./enums/commands.enum").CommandsEnum;
    ALT: import("./enums/commands.enum").CommandsEnum;
    PAUSE: import("./enums/commands.enum").CommandsEnum;
    CAPSLOCK: import("./enums/commands.enum").CommandsEnum;
    ESCAPE: import("./enums/commands.enum").CommandsEnum;
    SPACE: import("./enums/commands.enum").CommandsEnum;
    A: import("./enums/alphabet.enum").AlphabetEnum;
    B: import("./enums/alphabet.enum").AlphabetEnum;
    C: import("./enums/alphabet.enum").AlphabetEnum;
    D: import("./enums/alphabet.enum").AlphabetEnum;
    E: import("./enums/alphabet.enum").AlphabetEnum;
    F: import("./enums/alphabet.enum").AlphabetEnum;
    G: import("./enums/alphabet.enum").AlphabetEnum;
    H: import("./enums/alphabet.enum").AlphabetEnum;
    I: import("./enums/alphabet.enum").AlphabetEnum;
    J: import("./enums/alphabet.enum").AlphabetEnum;
    K: import("./enums/alphabet.enum").AlphabetEnum;
    L: import("./enums/alphabet.enum").AlphabetEnum;
    M: import("./enums/alphabet.enum").AlphabetEnum;
    N: import("./enums/alphabet.enum").AlphabetEnum;
    O: import("./enums/alphabet.enum").AlphabetEnum;
    P: import("./enums/alphabet.enum").AlphabetEnum;
    Q: import("./enums/alphabet.enum").AlphabetEnum;
    R: import("./enums/alphabet.enum").AlphabetEnum;
    S: import("./enums/alphabet.enum").AlphabetEnum;
    T: import("./enums/alphabet.enum").AlphabetEnum;
    U: import("./enums/alphabet.enum").AlphabetEnum;
    V: import("./enums/alphabet.enum").AlphabetEnum;
    W: import("./enums/alphabet.enum").AlphabetEnum;
    X: import("./enums/alphabet.enum").AlphabetEnum;
    Y: import("./enums/alphabet.enum").AlphabetEnum;
    Z: import("./enums/alphabet.enum").AlphabetEnum;
    NUM_LOCK: import("./enums/accents.enum").AccentsEnum;
    SCROLL_LOCK: import("./enums/accents.enum").AccentsEnum;
    SEMICOLON: import("./enums/accents.enum").AccentsEnum;
    EQUAL_SIGN: import("./enums/accents.enum").AccentsEnum;
    COMMA: import("./enums/accents.enum").AccentsEnum;
    DASH: import("./enums/accents.enum").AccentsEnum;
    PERIOD: import("./enums/accents.enum").AccentsEnum;
    FORWARD_SLASH: import("./enums/accents.enum").AccentsEnum;
    GRAVE_ACCENT: import("./enums/accents.enum").AccentsEnum;
    OPEN_BRACKET: import("./enums/accents.enum").AccentsEnum;
    BACKSLASH: import("./enums/accents.enum").AccentsEnum;
    CLOSE_BRACKET: import("./enums/accents.enum").AccentsEnum;
    SINGLE_QUOTE: import("./enums/accents.enum").AccentsEnum;
};
export declare const keycodeSegments: KeycodeInterface;
